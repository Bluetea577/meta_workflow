configfile: "../config/config.yaml"

import os
import re
import sys
import tempfile
import pandas as pd
import numpy as np
from pathlib import Path

workflow_folder = os.path.dirname(os.path.abspath(workflow.snakefile))
sys.path.append(os.path.join(workflow_folder, "scripts"))

WORKDIR = os.path.join(config["path"]["user_root"], config["path"]["meta_path"])

# 读取id配置至IDS
SAMPLES_TABLE = pd.read_csv(os.path.join(WORKDIR, config["samples"]["id"]), index_col='Run', sep='\t')

IDS = SAMPLES_TABLE.index.tolist()

from scripts.default_values import *

include: "rules/env_build.smk"
include: "rules/sra_download.smk"
include: "rules/clean_data.smk"
include: "rules/assembly.smk"
include: "rules/binning.smk"
include: "rules/drep.smk"
include: "rules/mags.smk"
include: "rules/gtdbtk.smk"
include: "rules/prokka.smk"

rule all:
    input:
        SRA_RUN + "/rule_sra_download.done",
        CLEAN_RUN+ "/rule_clean_data.done",
        ASSE_RUN+ "/rule_assembly.done",
        BIN_RUN+ "/rule_binning.done",
        BIN_RUN+ "/rule_drep.done",
        BIN_RUN+ "/rule_mags.done",
        GTDB_DIR+ "/rule_gtdbtk.done",
        PROKKA_DIR+ "/rule_prokka.done",

for r in workflow.rules:
    if not "mem_mb" in r.resources:
        # default
        r.resources["mem_mb"] = config["mem"] * 1000

    # add time if ot present. Simple jobs use simple time

    if "time_min" not in r.resources:
        r.resources["time_min"] = config["runtime"]["default"] * 60

    if not "runtime" in r.resources:
        r.resources["runtime"] = r.resources["time_min"]